{"ast":null,"code":"var _jsxFileName = \"/home/luciojr/Documents/gostack-template-conceitos-reactjs/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./styles.css\";\nimport api from './services/api';\n\nfunction App() {\n  const [repositories, setRepo] = useState([{\n    title: 'google'\n  }]);\n  useEffect(() => {\n    api.get('projects').then(response => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `New repository ${Date.now()}`,\n      url: `https://github/${uuidv4()}`\n    });\n    console.log(response.data);\n    setRepo([...repositories, response.data]);\n  }\n\n  async function handleRemoveRepository(id) {\n    const repoIndex = repositories.findIndex(repo => repo.id === id);\n    await api.delete(`repositories/${id}`);\n    repositories.splice(repoIndex, 1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, repositories.map(repo => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: repo.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, repo.title, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleRemoveRepository(repo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 48\n      }\n    }, \"Remover\")));\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luciojr/Documents/gostack-template-conceitos-reactjs/src/App.js"],"names":["React","useState","useEffect","v4","uuidv4","api","App","repositories","setRepo","title","get","then","response","setProjects","data","handleAddRepository","post","Date","now","url","console","log","handleRemoveRepository","id","repoIndex","findIndex","repo","delete","splice","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAD,CAAxC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjCC,MAAAA,WAAW,CAACD,QAAQ,CAACE,IAAV,CAAX;AACH,KAFD;AAGH,GAJU,EAIR,EAJQ,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC,UAAMH,QAAQ,GAAG,MAAMP,GAAG,CAACW,IAAJ,CAAS,cAAT,EAAyB;AAC9CP,MAAAA,KAAK,EAAG,kBAAiBQ,IAAI,CAACC,GAAL,EAAW,EADU;AAE9CC,MAAAA,GAAG,EAAG,kBAAiBf,MAAM,EAAG;AAFc,KAAzB,CAAvB;AAIAgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,IAArB;AACAN,IAAAA,OAAO,CAAC,CAAC,GAAGD,YAAJ,EAAkBK,QAAQ,CAACE,IAA3B,CAAD,CAAP;AACD;;AAED,iBAAeQ,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC,UAAMC,SAAS,GAAGjB,YAAY,CAACkB,SAAb,CAAuBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA3C,CAAlB;AAEA,UAAMlB,GAAG,CAACsB,MAAJ,CAAY,gBAAeJ,EAAG,EAA9B,CAAN;AAEAhB,IAAAA,YAAY,CAACqB,MAAb,CAAoBJ,SAApB,EAA+B,CAA/B;AACD;;AAED,sBACE,uDACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,YAAY,CAACsB,GAAb,CAAiBH,IAAI,IAAI;AACxB,wBACE,uDACA;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACjB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBiB,IAAI,CAACjB,KAA3B,eAAiC;AAAQ,MAAA,OAAO,EAAE,MAAMa,sBAAsB,CAACI,IAAI,CAACH,EAAN,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,CADA,CADF;AAKD,GANA,CADL,CADF,eAUE;AAAQ,IAAA,OAAO,EAAER,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CADF;AAcD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport \"./styles.css\";\nimport api from './services/api'\n\n\n\nfunction App() {\n  const [repositories, setRepo] = useState([{title: 'google'}])\n\n  useEffect(() => {\n    api.get('projects').then(response => {\n        setProjects(response.data)\n    })\n}, [])\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `New repository ${Date.now()}`,\n      url: `https://github/${uuidv4()}`,\n    })\n    console.log(response.data)\n    setRepo([...repositories, response.data])\n  }\n\n  async function handleRemoveRepository(id) {\n    const repoIndex = repositories.findIndex(repo => repo.id === id)\n\n    await api.delete(`repositories/${id}`)\n\n    repositories.splice(repoIndex, 1)\n  }\n\n  return (\n    <>\n      <ul data-testid=\"repository-list\">\n          {repositories.map(repo => {\n            return (\n              <>\n              <li key={repo.title}>{repo.title}<button onClick={() => handleRemoveRepository(repo.id)}>Remover</button></li>\n              </>\n            )\n          })}\n      </ul>\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}