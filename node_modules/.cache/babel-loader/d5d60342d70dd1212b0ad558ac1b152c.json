{"ast":null,"code":"var _jsxFileName = \"/home/luciojr/Documents/gostack-template-conceitos-reactjs/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./styles.css\";\nimport api from './services/api';\n\nfunction App() {\n  const [repositories, setRepo] = useState([{\n    title: 'google'\n  }]);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `New repository ${Date.now()}`,\n      url: `https://github/${uuidv4()}`\n    });\n    console.log(response.data);\n    setRepo([...repositories, response.data]);\n  }\n\n  async function handleRemoveRepository(id) {\n    console.log(id);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, repositories.map(repo => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: repo.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, repo.title, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleRemoveRepository(repo.title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 48\n      }\n    }, \"Remover\")));\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luciojr/Documents/gostack-template-conceitos-reactjs/src/App.js"],"names":["React","useState","useEffect","v4","uuidv4","api","App","repositories","setRepo","title","handleAddRepository","response","post","Date","now","url","console","log","data","handleRemoveRepository","id","map","repo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAD,CAAxC;;AAEA,iBAAeC,mBAAf,GAAqC;AACnC,UAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAJ,CAAS,cAAT,EAAyB;AAC9CH,MAAAA,KAAK,EAAG,kBAAiBI,IAAI,CAACC,GAAL,EAAW,EADU;AAE9CC,MAAAA,GAAG,EAAG,kBAAiBX,MAAM,EAAG;AAFc,KAAzB,CAAvB;AAIAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,IAArB;AACAV,IAAAA,OAAO,CAAC,CAAC,GAAGD,YAAJ,EAAkBI,QAAQ,CAACO,IAA3B,CAAD,CAAP;AACD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD;;AAED,sBACE,uDACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,YAAY,CAACc,GAAb,CAAiBC,IAAI,IAAI;AACxB,wBACE,uDACA;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACb,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBa,IAAI,CAACb,KAA3B,eAAiC;AAAQ,MAAA,OAAO,EAAE,MAAMU,sBAAsB,CAACG,IAAI,CAACb,KAAN,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,CADA,CADF;AAKD,GANA,CADL,CADF,eAUE;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CADF;AAcD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport \"./styles.css\";\nimport api from './services/api'\n\n\n\nfunction App() {\n  const [repositories, setRepo] = useState([{title: 'google'}])\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `New repository ${Date.now()}`,\n      url: `https://github/${uuidv4()}`,\n    })\n    console.log(response.data)\n    setRepo([...repositories, response.data])\n  }\n\n  async function handleRemoveRepository(id) {\n    console.log(id)\n  }\n\n  return (\n    <>\n      <ul data-testid=\"repository-list\">\n          {repositories.map(repo => {\n            return (\n              <>\n              <li key={repo.title}>{repo.title}<button onClick={() => handleRemoveRepository(repo.title)}>Remover</button></li>\n              </>\n            )\n          })}\n      </ul>\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}